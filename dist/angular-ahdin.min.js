!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("angular"),require("blobUtil"),require("loadImage")):"function"==typeof define&&define.amd?define(["angular","blobUtil","loadImage"],e):"object"==typeof exports?exports.ahdin=e(require("angular"),require("blobUtil"),require("loadImage")):t.ahdin=e(t.angular,t.blobUtil,t.loadImage)}(this,function(t,e,o){return function(t){function e(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return t[r].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e,o){"use strict";function r(t,e,o){function r(e){function r(t){n(function(o){a(e.sourceFile,t,o)})}function n(t){a.parseMetaData(e.sourceFile,function(o){var r={canvas:!0,maxWidth:e.maxWidth,maxHeight:e.maxHeight};o.exif&&(r.orientation=o.exif.get("Orientation")),t(r)})}function u(t){c(t,m)}function c(t,o){var r="image/"+e.outputFormat,n=t.toDataURL(r,e.quality);i.dataURLToBlob(n).then(s).then(o)}function s(t){return t.name=e.sourceFile.name,t}function m(t){function e(){l.resolve(t)}o.$apply(e)}f(e),e.quality=e.quality||x,e.outputFormat=e.outputFormat||"jpeg";var l=t.defer();return r(u),l.promise}function u(t){return n.isNumber(t)&&t>0}function f(t){t=t||{},c(t.sourceFile),s(t.maxWidth),m(t.maxHeight),l(t.outputFormat),p(t.quality)}function c(t){var o=t instanceof e.File||t instanceof e.Blob;if(!o)throw new Error("params.sourceFile must be instance of File")}function s(t){var e=void 0===t||u(t);if(!e)throw new Error("params.maxWidth must be a positive Number")}function m(t){var e=void 0===t||u(t);if(!e)throw new Error("params.maxHeight must be a positive Number")}function l(t){var e=d.indexOf(t)>-1,o=t?e:!0;if(!o)throw new Error("params.outputFormat format must be one of ["+d+"]")}function p(t){var e=void 0===t||t>0&&1>=t;if(!e)throw new Error("params.quality must be a Number over 0 and less or equal to 1")}var d=["jpeg","png"],x=.8;return{compress:r}}var n=o(1),i=o(2),a=o(3);o(3),o(3),o(3),o(3),t.exports=n.module("ahdin",[]).factory("Ahdin",r),r.$inject=["$q","$window","$rootScope"]},function(e,o){e.exports=t},function(t,o){t.exports=e},function(t,e){t.exports=o}])});
//# sourceMappingURL=angular-ahdin.min.js.map